package com.weekly.assignment02.GuitarApp;

import java.util.List;
import java.util.Scanner;

public class GuitarMain {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Inventory inventory = new Inventory();

        // ✅ 6 Sample guitars (with showMessage = false)
        inventory.addGuitar("1", 1500.0, Builder.FENDER, "Stratocaster", Type.ELECTRIC, 6, Wood.MAHOGANY, Wood.MAPLE, false);
        inventory.addGuitar("2", 1200.0, Builder.MARTIN, "D-28", Type.ACOUSTIC, 6, Wood.BRAZILIAN_ROSEWOOD, Wood.CEDAR, false);
        inventory.addGuitar("3", 1800.0, Builder.GIBSON, "Les Paul", Type.ELECTRIC, 6, Wood.MAPLE, Wood.MAPLE, false);
        inventory.addGuitar("4", 1000.0, Builder.COLLINGS, "OM2H", Type.ACOUSTIC, 12, Wood.MAHOGANY, Wood.CEDAR, false);
        inventory.addGuitar("5", 2000.0, Builder.RYAN, "Nightingale", Type.ACOUSTIC, 6, Wood.COCOBOLO, Wood.ADIRONDACK, false);
        inventory.addGuitar("6", 950.0, Builder.OLSON, "SJ", Type.ELECTRIC, 6, Wood.INDIAN_ROSEWOOD, Wood.SITKA, false);

        System.out.println("====== WELCOME TO RICK'S GUITAR INVENTORY SYSTEM ======");

        while (true) {
            System.out.println("\n1. Admin Panel");
            System.out.println("2. Customer Panel");
            System.out.println("3. Exit");
            System.out.print("Choose: ");
            String choice = sc.nextLine();

            if (choice.equals("1")) handleAdmin(sc, inventory);
            else if (choice.equals("2")) handleCustomer(sc, inventory);
            else if (choice.equals("3")) break;
            else System.out.println("Invalid choice.");
        }

        System.out.println("Thank you for using Rick's Inventory!");
    }

    // ✅ ADMIN PANEL
    private static void handleAdmin(Scanner sc, Inventory inventory) {
        System.out.println("\n--- Admin Panel ---");
        System.out.print("Enter ID: ");
        String id = sc.nextLine();

        System.out.print("Enter Price: ");
        double price;
        try {
            price = Double.parseDouble(sc.nextLine());
        } catch (NumberFormatException e) {
            System.out.println("Invalid price.");
            return;
        }

        System.out.println("Choose Builder:");
        Builder.showOptions();
        Builder builder;
        try {
            builder = Builder.valueOf(sc.nextLine().trim().toUpperCase());
        } catch (Exception e) {
            System.out.println("Invalid builder.");
            return;
        }

        System.out.print("Enter Model: ");
        String model = sc.nextLine();

        System.out.println("Choose Type:");
        Type.showOptions();
        Type type;
        try {
            type = Type.valueOf(sc.nextLine().trim().toUpperCase());
        } catch (Exception e) {
            System.out.println("Invalid type.");
            return;
        }

        System.out.print("Enter number of strings (e.g., 6, 12): ");
        int numStrings;
        try {
            numStrings = Integer.parseInt(sc.nextLine().trim());
        } catch (NumberFormatException e) {
            System.out.println("❌ Invalid number of strings.");
            return;
        }

        System.out.println("Choose Back Wood:");
        Wood.showOptions();
        Wood back;
        try {
            back = Wood.valueOf(sc.nextLine().trim().toUpperCase());
        } catch (Exception e) {
            System.out.println("Invalid back wood.");
            return;
        }

        System.out.println("Choose Top Wood:");
        Wood.showOptions();
        Wood top;
        try {
            top = Wood.valueOf(sc.nextLine().trim().toUpperCase());
        } catch (Exception e) {
            System.out.println("Invalid top wood.");
            return;
        }

        inventory.addGuitar(id, price, builder, model, type, numStrings, back, top, true);
        System.out.println("✅ Guitar Added Successfully!");
        inventory.displayAll(); // ✅ Show table after adding
    }

    // ✅ CUSTOMER PANEL
    private static void handleCustomer(Scanner sc, Inventory inventory) {
        System.out.println("\n========== Welcome Customer ==========");

        System.out.println("Would you like to view the current guitar inventory?");
        System.out.println("1. Yes");
        System.out.println("2. No");
        System.out.print("Enter your choice: ");
        String seeInventory = sc.nextLine();

        if (seeInventory.equals("1")) inventory.displayAll(); // ✅ show full inventory

        System.out.println("\nDo you want to sort guitars by price?");
        System.out.println("1. Ascending");
        System.out.println("2. Descending");
        System.out.println("3. Skip");
        System.out.print("Enter your choice: ");
        String sort = sc.nextLine();

        if (sort.equals("1")) inventory.displaySorted(1); // ✅ ascending
        else if (sort.equals("2")) inventory.displaySorted(2); // ✅ descending

        System.out.println("\nLet's find your ideal guitar.");
        System.out.println("To skip a criteria, press space.");

        System.out.print("Available Builders: ");
        Builder.showOptions();
        String builderInput = sc.nextLine().trim();
        Builder builder = builderInput.isEmpty() ? Builder.ANY : Builder.valueOf(builderInput.toUpperCase());

        System.out.print("Enter Model: ");
        String model = sc.nextLine().trim();

        System.out.print("Available Types: ");
        Type.showOptions();
        String typeInput = sc.nextLine().trim();
        Type type = typeInput.isEmpty() ? Type.ANY : Type.valueOf(typeInput.toUpperCase());

        System.out.print("Enter Number of Strings: ");
        String stringInput = sc.nextLine().trim();
        int numStrings = stringInput.isEmpty() ? 0 : Integer.parseInt(stringInput);

        System.out.print("Available Woods: ");
        Wood.showOptions();
        System.out.print("Enter Back Wood: ");
        String backWoodInput = sc.nextLine().trim();
        Wood backWood = backWoodInput.isEmpty() ? Wood.ANY : Wood.valueOf(backWoodInput.toUpperCase());

        System.out.print("Enter Top Wood: ");
        String topWoodInput = sc.nextLine().trim();
        Wood topWood = topWoodInput.isEmpty() ? Wood.ANY : Wood.valueOf(topWoodInput.toUpperCase());

        GuitarSpec searchSpec = new GuitarSpec(builder, model, type, numStrings, backWood, topWood);
        List<Guitar> results = inventory.search(searchSpec);

        if (results.isEmpty()) {
            System.out.println("❌ No matching guitars found.");
        } else {
            System.out.println("\nMatching guitars found:");
            inventory.printHeader();
            for (Guitar g : results) g.display();
            inventory.printFooter();
        }
    }
}
