package com.weekly.assignment02.GuitarApp;

import java.util.List;
import java.util.Scanner;

import java.util.;

public class GuitarMain {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Inventory inventory = new Inventory();

        // Sample guitars
        inventory.addGuitar("1", 1500.0, Builder.FENDER, "Stratocaster", Type.ELECTRIC, 6, Wood.MAHOGANY, Wood.MAPLE);
        inventory.addGuitar("2", 1200.0, Builder.MARTIN, "D-28", Type.ACOUSTIC, 6, Wood.BRAZILIAN_ROSEWOOD, Wood.CEDAR);

        while (true) {
            System.out.println("\n====== RICK'S GUITAR INVENTORY SYSTEM ======");
            System.out.println("1. Admin Panel");
            System.out.println("2. Customer Panel");
            System.out.println("3. Exit");
            System.out.print("Choose: ");
            String choice = sc.nextLine();

            if (choice.equals("1")) handleAdmin(sc, inventory);
            else if (choice.equals("2")) handleCustomer(sc, inventory);
            else if (choice.equals("3")) break;
            else System.out.println("Invalid choice.");
        }

        System.out.println("Thank you for using Rick's Inventory!");
    }

    // Admin can add guitar
    private static void handleAdmin(Scanner sc, Inventory inventory) {
        System.out.println("\n--- Admin Panel ---");
        System.out.print("Enter ID: ");
        String id = sc.nextLine();

        System.out.print("Enter Price: ");
        String priceStr = sc.nextLine();
        double price = Double.parseDouble(priceStr); // no parse restriction removed

        System.out.println("Choose Builder:");
        Builder.showOptions();
        String builderStr = sc.nextLine().toUpperCase();
        Builder builder = Builder.valueOf(builderStr);

        System.out.print("Enter Model: ");
        String model = sc.nextLine();

        System.out.println("Choose Type:");
        Type.showOptions();
        String typeStr = sc.nextLine().toUpperCase();
        Type type = Type.valueOf(typeStr);

        System.out.print("Enter number of strings (e.g., 6, 12): ");
        String stringsStr = sc.nextLine();
        int numStrings = Integer.parseInt(stringsStr); // no parse restriction removed

        System.out.println("Choose Back Wood:");
        Wood.showOptions();
        String backStr = sc.nextLine().toUpperCase();
        Wood back = Wood.valueOf(backStr);

        System.out.println("Choose Top Wood:");
        Wood.showOptions();
        String topStr = sc.nextLine().toUpperCase();
        Wood top = Wood.valueOf(topStr);

        inventory.addGuitar(id, price, builder, model, type, numStrings, back, top);
    }

    // Customer can search guitars
    private static void handleCustomer(Scanner sc, Inventory inventory) {
        System.out.println("\n========== Welcome Customer ==========");
        System.out.println("Here is the current Guitar Inventory:\n");
        inventory.displayAll();

        System.out.println("\nDo you want to sort guitars by price?");
        System.out.println("1. Ascending");
        System.out.println("2. Descending");
        System.out.println("3. Skip");
        System.out.print("Enter your choice: ");
        String sort = sc.nextLine();

        if (sort.equals("1")) inventory.displaySorted(1);
        else if (sort.equals("2")) inventory.displaySorted(2);

        System.out.println("\nLet's find your ideal guitar.");
        System.out.println("To skip a criteria, press space.");

        System.out.print("Available Builders: ");
        Builder.showOptions();
        String builderInput = sc.nextLine().trim();
        Builder builder = builderInput.isEmpty() ? Builder.ANY : Builder.valueOf(builderInput.toUpperCase());

        System.out.print("Enter Model: ");
        String model = sc.nextLine().trim();

        System.out.print("Available Types: ");
        Type.showOptions();
        String typeInput = sc.nextLine().trim();
        Type type = typeInput.isEmpty() ? Type.ANY : Type.valueOf(typeInput.toUpperCase());

        System.out.print("Enter Number of Strings: ");
        String stringInput = sc.nextLine().trim();
        int numStrings = stringInput.isEmpty() ? 0 : Integer.parseInt(stringInput);

        System.out.print("Available Woods: ");
        Wood.showOptions();
        System.out.print("Enter Back Wood: ");
        String backWoodInput = sc.nextLine().trim();
        Wood backWood = backWoodInput.isEmpty() ? Wood.ANY : Wood.valueOf(backWoodInput.toUpperCase());

        System.out.print("Enter Top Wood: ");
        String topWoodInput = sc.nextLine().trim();
        Wood topWood = topWoodInput.isEmpty() ? Wood.ANY : Wood.valueOf(topWoodInput.toUpperCase());

        GuitarSpec searchSpec = new GuitarSpec(builder, model, type, numStrings, backWood, topWood);
        List<Guitar> results = inventory.search(searchSpec);

        if (results.isEmpty()) {
            System.out.println("‚ùå No matching guitars found.");
        } else {
            System.out.println("\nMatching guitars found:");
            inventory.printHeader();
            for (Guitar g : results) g.display();
            inventory.printFooter();
        }
    }
}
